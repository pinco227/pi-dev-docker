services:
  webserver:
    build:
      context: nginx
      dockerfile: Dockerfile
    container_name: webserver
    restart: unless-stopped
    env_file:
      - stack.env
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginxdata:/var/log/nginx
    depends_on:
      - flask
    networks:
      - frontend

  flask:
    build:
      context: flask
      dockerfile: Dockerfile
    container_name: flask
    # flask requires SIGINT to stop gracefully
    # (default stop signal from Compose is SIGTERM)
    stop_signal: SIGINT
    env_file:
      - stack.env
    volumes:
      - appdata:/var/www/pi-dev
    depends_on:
      - mongo
    networks:
      - frontend
      - backend

  mongo:
    image: mongo:4.0.8
    container_name: mongo
    restart: unless-stopped
    env_file:
      - stack.env
    ports:
      - "27017:27017"
    command: mongod --auth
    volumes:
      - mongodbdata:/data/db/pi-dev
    networks:
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mongodbdata:
    driver: local
  appdata:
    driver: local
  nginxdata:
    driver: local
